When would you want to use a remote repository rather than keeping all your work local?

The main purpose is allowing other users to collobarate with the project. 
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

When collabarate with your project, you may not want the files created by other people in your local repo.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Clones are the file that are copied either locally from other folder or copied from Github repo to local folder. If a user wants to make changes to existing repo and wants to work locally, they can clone the repo.

Forks are the files that are copied from one repository to other in Github. If the primary repo is not allowed to make branches or adding commits to it, forking is the better option.

Branches are created in a repository. If a user wants to make special features or fix a bug they would create a branch from master repo.

What is the benefit of having a copy of the last known state of the remote stored locally?

In other words, what is the benefit of having origin/master(or other branch name here) ? If any files are changed in local repo and not pushed, then it is nice to know the commits in local and remote are different and the user can act accordingly.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without Git ot Github, one way to collaborate is emailing changes to the primary user (who keeps all the files updated). It works hassle free on very small group say 3 people. But it would gradually be harder when the group grows. 

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

The separate branch is needed if the changes in master branch should be done only on important cases. 


